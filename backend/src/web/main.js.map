{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/card/card.component.ts","./src/app/card/card.component.html","./src/app/app-routing.module.ts","./src/app/room.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACR5D,MAAM,YAAY;;wEAAZ,YAAY;4FAAZ,YAAY;QCPzB,wEAAyB;QAEzB,sEAAqB;;;;;;;;;;;;;;ACDrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAEF;AACT;AACgC;AACzB;AACM;AACJ;;AAiBjD,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YANJ;YACP,uEAAa;YACb,oEAAgB;YAChB,4FAAuB;YACvB,qEAAgB;SACjB;mIAIU,SAAS,mBAblB,2DAAY;QACZ,kEAAa;QACb,wEAAe,aAGf,uEAAa;QACb,oEAAgB;QAChB,4FAAuB;QACvB,qEAAgB;;;;;;;;;;;;;;;;;ACbb,MAAM,eAAe;IAM1B;QALiB,cAAS,GAAG,aAAa,CAAC;IAK3B,CAAC;IAJjB,IAAW,KAAK;QACd,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAID,QAAQ;IACR,CAAC;;8EATU,eAAe;+FAAf,eAAe;QCP5B,yEACE;QAAA,yEACE;QAAA,uEAAM;QAAA,uDAAW;QAAA,4DAAO;QAC1B,4DAAM;QACR,4DAAM;;QAFI,0DAAW;QAAX,0EAAW;;;;;;;;;;;;;;ACCrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6B;AAKsB;;;;;;ICCzC,sEAA4B;IAAA,uDAAa;IAAA,4DAAM;;;IAAnB,0DAAa;IAAb,2FAAa;;;IACzC,sEAA4B;IAAA,kEAAE;IAAA,4DAAM;;;IAKpC,sEAA6B;IAAA,uDAAc;IAAA,4DAAM;;;IAApB,0DAAc;IAAd,4FAAc;;;IAC3C,sEAA6B;IAAA,kEAAE;IAAA,4DAAM;;;IAKrC,sEAA8B;IAAA,uDAAe;IAAA,4DAAM;;;IAArB,0DAAe;IAAf,6FAAe;;;IAC7C,sEAA8B;IAAA,kEAAE;IAAA,4DAAM;;;IApB5C,wEACE;IAAA,yEACE;IAAA,yEACE;IAAA,sEAAK;IAAA,uDAAa;IAAA,4DAAM;IAC1B,4DAAM;IACN,yEACE;IAAA,sEAAK;IAAA,6EAAG;IAAA,4DAAM;IACd,wHAA+C;IAC/C,wHAAoC;IACtC,4DAAM;IACN,qEAA6C;IAC7C,0EACE;IAAA,uEAAK;IAAA,8EAAG;IAAA,4DAAM;IACd,0HAAiD;IACjD,0HAAqC;IACvC,4DAAM;IACN,qEAA4C;IAC5C,2EACE;IAAA,uEAAK;IAAA,oFAAI;IAAA,4DAAM;IACf,0HAAmD;IACnD,0HAAsC;IACxC,4DAAM;IACR,4DAAM;IACR,qEAAe;;;IAtBK,0DAA2C;IAA3C,uGAA2C;IACrB,0DAA2D;IAA3D,uHAA2D;IAC1F,0DAAa;IAAb,6EAAa;IAIZ,0DAAoB;IAApB,mFAAoB;IACpB,0DAAoB;IAApB,mFAAoB;IAKpB,0DAAqB;IAArB,oFAAqB;IACrB,0DAAqB;IAArB,oFAAqB;IAKrB,0DAAsB;IAAtB,qFAAsB;IACtB,0DAAsB;IAAtB,qFAAsB;;ADN/B,MAAM,aAAa;IAOxB,YAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAJnD,SAAI,GAAa,CAAC,EAAE,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC;QAC/C,mBAAc,GAAW,CAAC,CAAC;QAC3B,UAAK,GAAa,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;IAEiB,CAAC;IAEzE,QAAQ;QACJ,IAAI,CAAC,QAAQ,EAAE,CAAC;IACpB,CAAC;IAED,MAAM,CAAC,UAAkB;QACvB,uBAAuB;QACvB,YAAY;QACZ,WAAW;QACX,MAAM,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;QACvE,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAEvB,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QACxC,6CAA6C;QAC7C,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE;YACpB,OAAO,EAAE,CAAC;SACX;QAED,oCAAoC;QACpC,OAAO,GAAG,CAAC;IACb,CAAC;IAED,OAAO,CAAC,GAAW,EAAE,KAAe;QAClC,0CAA0C;QAC1C,IAAI,GAAG,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YAC9D,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;SACjB;QAED,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,MAAM,UAAU,GAAG,QAAQ,CAAC;QAC5B,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YAChB,MAAM,IAAI,CAAC,GAAG,UAAU,CAAC;QAC3B,CAAC,CAAC,CAAC;QAEH,mBAAmB;QACnB,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;IAC7C,CAAC;IAED,QAAQ;QACN,MAAM,YAAY,GAAG,IAAI,CAAC;QAC1B,kDAAK,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YACpC,MAAM,GAAG,GAAW,IAAI,CAAC,MAAM,CAAC,2DAAU,CAAC,GAAG,CAAC,CAAC;YAChD,MAAM,IAAI,GAAW,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,2DAAU,CAAC,IAAI,CAAC,CAAC;YACxD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC;iBACnC,SAAS,CAAC,CAAC,CAAS,EAAE,EAAE;gBACvB,MAAM,SAAS,GAAW,CAAC,CAAC;gBAC5B,2BAA2B;gBAC3B,gCAAgC;gBAChC,+BAA+B;gBAC/B,6CAA6C;gBAC7C,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC,aAAa,CAAC,CAAC;YAC7C,CAAC,EACD,KAAK,CAAC,EAAE;gBACN,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC;YACvD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;;0EAhEU,aAAa;6FAAb,aAAa;QChB1B,yEACE;QAAA,yEACE;QAAA,4HAuBe;QACjB,4DAAM;QACR,4DAAM;;QAzB6B,0DAAa;QAAb,mFAAa;;;;;;;;;;;;;;ACDhD;AAAA;AAAA;AAAA;AAAA;AAAuD;AAER;;;AAE/C,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,2DAAY,EAAE;IACrC,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,2DAAY,EAAE;IAClD,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,2DAAY,EAAE;IACjD,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE;CAClD,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;;;;;;;ACJjB,MAAM,WAAW;IAUtB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QATpC,qCAAqC;QACrC,mCAAmC;QACnC,2CAA2C;QAC3C,8CAA8C;QAC9C,uCAAuC;QACtB,SAAI,GAAG,uBAAuB,CAAC;QAC/B,kBAAa,GAAG,IAAI,CAAC,IAAI,GAAG,kBAAkB,CAAC;QAC/C,iBAAY,GAAG,IAAI,CAAC,IAAI,GAAG,iBAAiB,CAAC;IAEtB,CAAC;IAEzC,QAAQ,CAAC,GAAW,EAAE,IAAY;QAChC,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;IACjD,CAAC;IAED,SAAS,CAAC,GAAW,EAAE,IAAY;QACjC,IAAI,GAAG,KAAK,EAAE,EAAE;YACd,OAAO,IAAI,CAAC,IAAI,CAAC;SAClB;aAAM,IAAI,GAAG,KAAK,WAAW,EAAE;YAC9B,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAClC;aAAM,IAAI,GAAG,KAAK,UAAU,EAAE;YAC7B,OAAO,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SACjC;QAED,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAED,OAAO,CAAC,GAAW;QACjB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,GAAG,CAAC,CAAC;QACzC,OAAO,KAAK,CAAC;IACf,CAAC;;sEAhCU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;;;;;;;ACR2B;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n\r\n}\r\n","<app-header></app-header>\r\n\r\n<app-card></app-card>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { CardComponent } from './card/card.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CardComponent,\r\n    HeaderComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  private readonly pageTitle = '喫煙室利用者数カウント';\r\n  public get title(): string {\r\n    return this.pageTitle;\r\n  }\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"header\" role=\"banner\">\r\n  <div id=\"title\">\r\n    <span>{{ title }}</span>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { timer } from 'rxjs';\r\n\r\nimport { RoomService } from '../room.service';\r\nimport { Room, RoomStatus } from './room-info';\r\n\r\nimport { apiSetting } from '../../config/api.json';\r\n\r\n@Component({\r\n  selector: 'app-card',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.component.scss']\r\n})\r\n\r\nexport class CardComponent implements OnInit {\r\n  public roomStatus: RoomStatus[];\r\n\r\n  private readonly apis: string[] = ['', 'specified', 'multiple'];\r\n  private readonly specifiedIndex: number = 1;\r\n  private readonly rooms: string[] = ['5階', '9階', '11階'];\r\n\r\n  constructor(private roomService: RoomService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n      this.getRooms();\r\n  }\r\n\r\n  getAPI(currentAPI: object): string {\r\n    // valueがtrueのkeyのみ取得する\r\n    // 戻り値は二重リスト\r\n    // [[k, v]]\r\n    const temp = Object.entries(currentAPI).filter(([k, v]) => v === true);\r\n    const api = temp[0][0];\r\n\r\n    const isExist = this.apis.includes(api);\r\n    // APIがすべてFalseの場合または存在しないAPIの場合は '' となるようにする\r\n    if (!api || !isExist) {\r\n      return '';\r\n    }\r\n\r\n    // apiが複数Trueになっていても一つ目に格納されているものを返す\r\n    return api;\r\n  }\r\n\r\n  getRoom(api: string, rooms: string[]): string {\r\n    // apiがspecifiedなのに部屋が複数指定されている場合、最初の一つを返す\r\n    if (api === this.apis[this.specifiedIndex] && rooms.length > 1) {\r\n      return rooms[0];\r\n    }\r\n\r\n    let result = '';\r\n    const joinString = '&room=';\r\n    rooms.forEach(r => {\r\n      result += r + joinString;\r\n    });\r\n\r\n    // 末尾の'&room='を削除する\r\n    return result.slice(0, -joinString.length);\r\n  }\r\n\r\n  getRooms(): void {\r\n    const intervalTime = 2000;\r\n    timer(0, intervalTime).subscribe(() => {\r\n      const api: string = this.getAPI(apiSetting.api);\r\n      const room: string = this.getRoom(api, apiSetting.room);\r\n      this.roomService.getRooms(api, room)\r\n      .subscribe((s: Room[]) => {\r\n        const roomsJson: Room[] = s;\r\n        // 文字列でアクセスしたら、Lintで警告されるが、\r\n        // ピリオドでアクセスしたらエラーで動かないためTsLintの\r\n        // no-string-literalをdisableにする\r\n        // tslint:disable-next-line:no-string-literal\r\n        this.roomStatus = roomsJson['room_status'];\r\n      },\r\n      error => {\r\n        console.error(error.status + ':' + error.statusText);\r\n      });\r\n    });\r\n  }\r\n}\r\n","<div class=\"content\" role=\"main\">\r\n  <div class=\"card_wrapper\">\r\n    <ng-container *ngFor=\"let room of roomStatus\">\r\n      <div class=\"card\" [ngClass]=\"room.is_limit ? 'blinking' : ''\">\r\n        <div class=\"room_wrap room card_font\" [ngClass]=\"room.is_limit ? 'limit_color' : 'unlimit_color'\">\r\n          <div>{{room.room}}</div>\r\n        </div>\r\n        <div class=\"room_wrap room_use_wrap card_font\">\r\n          <div>利用者</div>\r\n          <div *ngIf=\"room.use != ''\">{{room.use}}人</div>\r\n          <div *ngIf=\"room.use == ''\">0人</div>\r\n        </div>\r\n        <div class=\"room_spacer spacer_dashed\"></div>\r\n        <div class=\"room_wrap room_wait_wrap card_font\">\r\n          <div>待機中</div>\r\n          <div *ngIf=\"room.wait != ''\">{{room.wait}}人</div>\r\n          <div *ngIf=\"room.wait == ''\">0人</div>\r\n        </div>\r\n        <div class=\"room_spacer spacer_solid\"></div>\r\n        <div class=\"room_wrap room_limit_wrap card_font\">\r\n          <div>定員上限</div>\r\n          <div *ngIf=\"room.limit != ''\">{{room.limit}}人</div>\r\n          <div *ngIf=\"room.limit == ''\">0人</div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: AppComponent },\r\n  { path: 'web/specified', component: AppComponent },\r\n  { path: 'web/multiple', component: AppComponent },\r\n  { path: '**', redirectTo: '', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Room } from './card/room-info';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoomService {\r\n  // フロントエンドとバックエンドでポートが異なると、CORSエラーになる\r\n  // それを回避するためフロントエンドのポート番号「4200」を指定し\r\n  // Angular CLIのリバースプロキシを利用してバックエンドとの通信を実現する\r\n  // private host = 'http://localhost:4200/app';\r\n  // buildしてhtmlを配置するだけならば、localhostで問題ない\r\n  private readonly host = 'http://localhost:8000';\r\n  private readonly specifiedHost = this.host + '/specified?room=';\r\n  private readonly multipleHost = this.host + '/multiple?room=';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getRooms(api: string, room: string): Observable<Room[]> {\r\n    return this.callAPI(this.createAPI(api, room));\r\n  }\r\n\r\n  createAPI(api: string, room: string): string {\r\n    if (api === '') {\r\n      return this.host;\r\n    } else if (api === 'specified') {\r\n      return this.specifiedHost + room;\r\n    } else if (api === 'multiple') {\r\n      return this.multipleHost + room;\r\n    }\r\n\r\n    return this.host;\r\n  }\r\n\r\n  callAPI(api: string): Observable<Room[]> {\r\n    console.log(api);\r\n    const rooms = this.http.get<Room[]>(api);\r\n    return rooms;\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}